<?php declare(strict_types=1);

namespace App\Domains\{{ domain }}\Model;

use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\BelongsToMany;
use App\Domains\{{ domain }}\Model\Builder\{{ domain }} as Builder;
use App\Domains\Language\Model\Language as LanguageModel;
use App\Domains\Post\Model\Post as PostModel;
use App\Domains\Tag\Model\Tag as TagModel;
use App\Domains\Shared\Model\ModelAbstract;

class {{ domain }} extends ModelAbstract
{
    /**
     * @var string
     */
    protected $table = '{{ table }}';

    /**
     * @const string
     */
    public const TABLE = '{{ table }}';

    /**
     * @const string
     */
    public const FOREIGN = '{{ table }}_id';

    /**
     * @param \Illuminate\Database\Query\Builder $q
     *
     * @return \Illuminate\Database\Eloquent\Builder|static
     */
    public function newEloquentBuilder($q)
    {
        return new Builder($q);
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function language(): BelongsTo
    {
        return $this->belongsTo(LanguageModel::class, LanguageModel::FOREIGN);
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function posts(): HasMany
    {
        return $this->hasMany(PostModel::class, static::FOREIGN);
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsToMany
     */
    public function tags(): BelongsToMany
    {
        return $this->belongsToMany(TagModel::class, TagUserModel::TABLE);
    }
}
